(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{388:function(t,e,s){"use strict";s.r(e);var v=s(25),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-directive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-directive"}},[t._v("#")]),t._v(" Vue - directive")]),t._v(" "),s("h2",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),s("h3",{attrs:{id:"v-if-和-v-show-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-的区别"}},[t._v("#")]),t._v(" v-if 和 v-show 的区别")]),t._v(" "),s("ul",[s("li",[t._v("v-show 不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换")]),t._v(" "),s("li",[t._v("v-if 是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块")])]),t._v(" "),s("p",[t._v("一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好")])])}),[],!1,null,null,null);e.default=a.exports}}]);