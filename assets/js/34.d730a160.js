(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{390:function(t,a,e){"use strict";e.r(a);var r=e(25),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),e("h3",{attrs:{id:"computed-的使用逻辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed-的使用逻辑"}},[t._v("#")]),t._v(" computed 的使用逻辑")]),t._v(" "),e("p",[t._v("对于任何复杂逻辑，你都应当使用计算属性，相对于非常便利的模板内的表达式，在模板中放入太多的逻辑会让模板过重且难以维护")]),t._v(" "),e("p",[t._v("并且计算属性是基于它们的响应式依赖进行缓存的，只在相关响应式依赖发生改变时它们才会重新求值")]),t._v(" "),e("h3",{attrs:{id:"created-与-mounted的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created-与-mounted的区别"}},[t._v("#")]),t._v(" created 与 mounted的区别")]),t._v(" "),e("ul",[e("li",[t._v("created:在模板渲染成html前调用，即通常初始化某些属性值，然后再渲染成视图。")]),t._v(" "),e("li",[t._v("mounted:在模板渲染成html后调用，通常是初始化页面完成后，再对html的dom节点进行一些需要的操作。\n其")])]),t._v(" "),e("h3",{attrs:{id:"组件间通信方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信方法"}},[t._v("#")]),t._v(" 组件间通信方法")]),t._v(" "),e("ul",[e("li",[t._v("通过调用父类方法，修改props")]),t._v(" "),e("li",[t._v("通过EventBus $emit $on")]),t._v(" "),e("li",[t._v("通过Vuex")])]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("h4",{attrs:{id:"创建前后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建前后"}},[t._v("#")]),t._v(" 创建前后")]),t._v(" "),e("h5",{attrs:{id:"beforecreate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate"}},[t._v("#")]),t._v(" beforeCreate")]),t._v(" "),e("p",[t._v("在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用")]),t._v(" "),e("h5",{attrs:{id:"created"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created"}},[t._v("#")]),t._v(" created")]),t._v(" "),e("p",[t._v("在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见")]),t._v(" "),e("h4",{attrs:{id:"载入前后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#载入前后"}},[t._v("#")]),t._v(" 载入前后")]),t._v(" "),e("h5",{attrs:{id:"beforemount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforemount"}},[t._v("#")]),t._v(" beforeMount")]),t._v(" "),e("p",[t._v("在挂载开始之前被调用：相关的 render 函数首次被调用。")]),t._v(" "),e("p",[t._v("该钩子在服务器端渲染期间不被调用")]),t._v(" "),e("h4",{attrs:{id:"mounted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mounted"}},[t._v("#")]),t._v(" mounted")]),t._v(" "),e("p",[t._v("el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。")]),t._v(" "),e("p",[t._v("注意 mounted 不会承诺所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以用 vm.$nextTick 替换掉 mounted")]),t._v(" "),e("h4",{attrs:{id:"更新前后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新前后"}},[t._v("#")]),t._v(" 更新前后")]),t._v(" "),e("h5",{attrs:{id:"beforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate"}},[t._v("#")]),t._v(" beforeUpdate")]),t._v(" "),e("p",[t._v("数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。")]),t._v(" "),e("p",[t._v("该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行")]),t._v(" "),e("h5",{attrs:{id:"updated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updated"}},[t._v("#")]),t._v(" updated")]),t._v(" "),e("p",[t._v("由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。")]),t._v(" "),e("p",[t._v("当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。")]),t._v(" "),e("p",[t._v("注意 updated 不会承诺所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以用 vm.$nextTick 替换掉 updated")]),t._v(" "),e("h4",{attrs:{id:"销毁前后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#销毁前后"}},[t._v("#")]),t._v(" 销毁前后")]),t._v(" "),e("h5",{attrs:{id:"beforedestory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforedestory"}},[t._v("#")]),t._v(" beforeDestory")]),t._v(" "),e("p",[t._v("实例销毁之前调用。在这一步，实例仍然完全可用")]),t._v(" "),e("p",[t._v("该钩子在服务器端渲染期间不被调用")]),t._v(" "),e("h5",{attrs:{id:"destoryed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destoryed"}},[t._v("#")]),t._v(" destoryed")]),t._v(" "),e("p",[t._v("Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁")]),t._v(" "),e("p",[t._v("该钩子在服务器端渲染期间不被调用")]),t._v(" "),e("h4",{attrs:{id:"keep-alive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),e("h5",{attrs:{id:"actived"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actived"}},[t._v("#")]),t._v(" actived")]),t._v(" "),e("p",[t._v("keep-alive 组件激活时调用")]),t._v(" "),e("h5",{attrs:{id:"deactived"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deactived"}},[t._v("#")]),t._v(" deactived")]),t._v(" "),e("p",[t._v("keep-alive 组件停用时调用")]),t._v(" "),e("h2",{attrs:{id:"vue-react的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-react的区别"}},[t._v("#")]),t._v(" Vue / React的区别")]),t._v(" "),e("h3",{attrs:{id:"相似点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相似点"}},[t._v("#")]),t._v(" 相似点")]),t._v(" "),e("ul",[e("li",[t._v("都为视图层框架，其他的功能如路由、状态管理等是框架分离的组件")]),t._v(" "),e("li",[t._v("都是用了virtual dom，支持ssr")]),t._v(" "),e("li",[t._v("都鼓励组件化，提高组件复用率")]),t._v(" "),e("li",[t._v("都有’props’的概念，props在组件中是一个特殊的属性，允许父组件往子组件传送数据")])]),t._v(" "),e("h3",{attrs:{id:"不同点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点")]),t._v(" "),e("h4",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),e("ul",[e("li",[t._v("单项数据流")]),t._v(" "),e("li",[t._v("props对于子组件来说是必须的，因为它依赖一个“单一数据源”作为它的“状态”")]),t._v(" "),e("li",[t._v("React与Vue最大的不同是模板的编写")]),t._v(" "),e("li",[t._v("在React中你需要使用setState()方法去更新状态")]),t._v(" "),e("li",[t._v("React由如Facebook这类大公司维护")])]),t._v(" "),e("h4",{attrs:{id:"vue-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-2"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("ul",[e("li",[t._v("数据双向绑定")]),t._v(" "),e("li",[t._v("Vue使用模板系统而不是JSX，使其对现有应用的升级更加容易,这是因为模板用的就是普通的HTML，通过Vue来整合现有的系统是比较容易的，不需要整体重构")]),t._v(" "),e("li",[t._v("在Vue中，数据由data属性在Vue对象中进行管理")])])])}),[],!1,null,null,null);a.default=v.exports}}]);