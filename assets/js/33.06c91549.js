(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{391:function(t,a,s){"use strict";s.r(a);var v=s(25),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),s("h2",{attrs:{id:"前端路由原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端路由原理"}},[t._v("#")]),t._v(" 前端路由原理")]),t._v(" "),s("p",[t._v("前端路由实现起来其实很简单，本质就是监听 URL 的变化，然后匹配路由规则，显示相应的页面，并且无须刷新。目前单页面使用的路由就只有两种实现方式")]),t._v(" "),s("ul",[s("li",[t._v("hash模式 - hashchange")]),t._v(" "),s("li",[t._v("history模式 - popstate")])]),t._v(" "),s("h3",{attrs:{id:"hash模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" Hash模式")]),t._v(" "),s("p",[t._v("触发方式：")]),t._v(" "),s("ul",[s("li",[t._v("点击跳转 / 浏览器历史跳转\n"),s("ul",[s("li",[t._v("触发hashchange事件")]),t._v(" "),s("li",[t._v("匹配路由规则进行跳转")])])]),t._v(" "),s("li",[t._v("手动刷新url\n"),s("ul",[s("li",[t._v("发送服务器请求， 但是也不会触发hashchange事件，可通过load事件")]),t._v(" "),s("li",[t._v("匹配路由规则进行跳转")])])])]),t._v(" "),s("h3",{attrs:{id:"history模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" History模式")]),t._v(" "),s("ul",[s("li",[t._v("浏览器动作\n"),s("ul",[s("li",[t._v("触发popstate")]),t._v(" "),s("li",[t._v("包括调用history.back()")])])]),t._v(" "),s("li",[t._v("浏览器跳转\n"),s("ul",[s("li",[t._v("调用pushState")])])]),t._v(" "),s("li",[t._v("手动刷新url\n"),s("ul",[s("li",[t._v("需要后端配合重定向")])])])]),t._v(" "),s("h2",{attrs:{id:"路由注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由注册"}},[t._v("#")]),t._v(" 路由注册")]),t._v(" "),s("p",[t._v("对于路由注册来说，核心就是调用 Vue.use(VueRouter)使得 VueRouter 可以使用 Vue。")]),t._v(" "),s("p",[t._v("然后通过 Vue 来调用 VueRouter 的 install 函数。")]),t._v(" "),s("p",[t._v("在该函数中，核心就是给组件 "),s("strong",[t._v("混入钩子函数")]),t._v(" 和 "),s("strong",[t._v("全局注册两个路由组件")])])])}),[],!1,null,null,null);a.default=r.exports}}]);